# Tests manuels de l’API REST
# ===========================
#
# Description d’appels pour tests interactifs grâce à l’extensions
# VSCode "REST Client", dont l’installation est proprosée automatiquement
# en ouvrant le projet.

@host = http://localhost:3000

### Création échouée (faute d’authentification) d’un morceau

# @name createTune
POST {{host}}/tunes
Content-Type: application/json

< ./fixtures/tune.json

### Création réussie (authentifiée) d’un morceau. Peut nécessiter un X-TOTP-Token une fois le MFA mis en place.

# @name createTune
POST {{host}}/tunes HTTP/1.1
Content-Type: application/json
Authorization: JWT {{logIn.response.body.token}}

< ./fixtures/tune.json


### Listing de morceaux, requête invalide

GET {{host}}/tunes?sortBy=foo&page=0&pageSize=15&pouet=coin
Accept-Version: 1.0

### Listing de morceaux, critère de tri ignoré (version API < v1.2)

GET {{host}}/tunes?sortBy=title
Accept-Version: 1.0

### Listing de morceaux, critère de tri exploité (version API v1.2+)

GET {{host}}/tunes?sortBy=title
Accept-Version: ^1.2

### Vote sur morceau. Peut nécessiter un X-TOTP-Token une fois le MFA mis en place.

POST {{host}}/tunes/{{createTune.response.headers.X-Tune-ID}}/votes
Content-Type: application/json
Authorization: JWT {{logIn.response.body.token}}

{
  "comment": "This tune rocks!",
  "offset": 1
}

### Inscription (sign up)

POST {{host}}/users
Content-Type: application/json

{
  "email": "john@smith.com",
  "firstName": "John",
  "lastName": "Smith",
  "password": "secret"
}

### Connexion réussie (bons credentials)

# @name logIn
POST {{host}}/sessions
Content-Type: application/json

{
  "email": "john@smith.com",
  "password": "secret"
}

### Connexion échouée (mauvais credentials)

POST {{host}}/sessions
Content-Type: application/json

{
  "email": "john@smith.com",
  "password": "foobar"
}

### Connexion invalide

POST {{host}}/sessions
Content-Type: application/json

{
  "email": "john@smith.com",
  "pass": "foobar"
}

### Activation du MFA sur utilisateur connecté. Peut nécessiter un X-TOTP-Token une fois le MFA mis en place.

PATCH {{host}}/users/me/mfa
Content-Type: application/json
Authorization: JWT {{logIn.response.body.token}}

{
  "enabled": true
}
